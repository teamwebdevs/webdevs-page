// ===================================================
// Color Generator
// ===================================================

// Generate Color Classes (or Silent) with all Colors from the Color Map.
//
// @access private
//
// @type {map}    $colors - Map with Colors
@mixin colorgenerator($colors: $kittn-color-map) {
  // Mixin check
  @if mixin_exists(_color) {
    @each $value, $entry in $colors {

      // Build Placeholder Classes
      %c#{map-get($kittn-bem, modifier)}#{$value} {
        @include _color($value,color);
      }
      %bc#{map-get($kittn-bem, modifier)}#{$value} {
        @include _color($value,background-color);
      }

      // Set Class for Text Color
      @if map-get($entry,type) == c {
        .c#{map-get($kittn-bem, modifier)}#{$value} {
          @extend %c#{map-get($kittn-bem, modifier)}#{$value};
        }
      }

      // Set Class for Background-Color
      @if map-get($entry,type) == b {
        .bc#{map-get($kittn-bem, modifier)}#{$value} {
          @extend %bc#{map-get($kittn-bem, modifier)}#{$value};
        }
      }

      // Set two Classes for Text & Background-Color
      @if map-get($entry,type) == bc {
        .c#{map-get($kittn-bem, modifier)}#{$value} {
          @extend %c#{map-get($kittn-bem, modifier)}#{$value};
        }
        .bc#{map-get($kittn-bem, modifier)}#{$value} {
          @extend %bc#{map-get($kittn-bem, modifier)}#{$value};
        }
      }
    }
  } @else {
    @warn "_color Mixin dosen't exists!"
  }


}
