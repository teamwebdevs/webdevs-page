// ===================================================
// Fontface Generator
// ===================================================

// Generate the Font-Face
//
// @param  {string} $fontname   - Fontname
// @param  {map}    $o          - Setup args
//         {string} $o.name     - Desired filename, otherwise use the Fontname [false]
//         {string} $o.weight   - Fontweight [normal]
//         {string} $o.style    - Fontstyle [normal]
//         {bool}   $o.short    - Use the Short Fontface Declaration [true]
@mixin fontface($fontname, $o: ()) {

  // Mixin Default Vars
  $o: map-merge((
    filename: false,
    weight: normal,
    style: normal,
    short: true
  ),$o);

  // If 'filename' is false use the fontname
  $filename: if(map-get($o, filename), map-get($o, filename), $fontname);

  // Two different calls for a Fontface
  @if map-get($o, short) {
    @font-face {
      font-family: $fontname;
      src: url('#{map-get($kittn-directorys, fonts)}#{$filename}.woff2') format('woff2'),
           url('#{map-get($kittn-directorys, fonts)}#{$filename}.woff') format('woff');
      font-weight : map-get($o, weight);
      font-style  : map-get($o, style); }

  } @else {
    @font-face {
      font-family: $fontname;
      src: url('#{map-get($kittn-directorys, fonts)}#{$filename}.eot');
      src: url('#{map-get($kittn-directorys, fonts)}#{$filename}.eot?#iefix') format('eot'),
           url('#{map-get($kittn-directorys, fonts)}#{$filename}.woff') format('woff'),
           url('#{map-get($kittn-directorys, fonts)}#{$filename}.ttf') format('truetype'),
           url('#{map-get($kittn-directorys, fonts)}#{$filename}.svg##{$fontname}') format('svg');
      font-weight : map-get($o, weight);
      font-style  : map-get($o, style); }
  }
}
